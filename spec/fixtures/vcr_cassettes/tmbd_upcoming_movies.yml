---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=471fbec1249579ef3875b9b4cbaaea28
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.5.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Jul 2021 14:58:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 adc90318bc35888e7fc939b759b9628a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - BOS50-C1
      X-Amz-Cf-Id:
      - 9IlrX-XgTsf9-ZsRCs3LltfwakqgAK7I6iK4I0uTO407xAVg3IB55Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRlcyI6eyJtYXhpbXVtIjoiMjAyMS0wOC0wNSIsIm1pbmltdW0iOiIyMDIxLTA3LTEzIn0sInBhZ2UiOjEsInJlc3VsdHMiOlt7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9kcTE4bkNUVExweTlQbXR6Wkk2WTJ5QWdkdzUuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTIsNTNdLCJpZCI6NDk3Njk4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCbGFjayBXaWRvdyIsIm92ZXJ2aWV3IjoiTmF0YXNoYSBSb21hbm9mZiwgYWxzbyBrbm93biBhcyBCbGFjayBXaWRvdywgY29uZnJvbnRzIHRoZSBkYXJrZXIgcGFydHMgb2YgaGVyIGxlZGdlciB3aGVuIGEgZGFuZ2Vyb3VzIGNvbnNwaXJhY3kgd2l0aCB0aWVzIHRvIGhlciBwYXN0IGFyaXNlcy4gUHVyc3VlZCBieSBhIGZvcmNlIHRoYXQgd2lsbCBzdG9wIGF0IG5vdGhpbmcgdG8gYnJpbmcgaGVyIGRvd24sIE5hdGFzaGEgbXVzdCBkZWFsIHdpdGggaGVyIGhpc3RvcnkgYXMgYSBzcHkgYW5kIHRoZSBicm9rZW4gcmVsYXRpb25zaGlwcyBsZWZ0IGluIGhlciB3YWtlIGxvbmcgYmVmb3JlIHNoZSBiZWNhbWUgYW4gQXZlbmdlci4iLCJwb3B1bGFyaXR5Ijo2OTkzLjQ3LCJwb3N0ZXJfcGF0aCI6Ii9xQVowcHphdDI0a0xkTzNvOGVqbWJMeHlPYWMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wNy0wNyIsInRpdGxlIjoiQmxhY2sgV2lkb3ciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC4yLCJ2b3RlX2NvdW50IjoyMDMxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9nWDVVckgxVExWVkJ3STdXeHBsVzQzQkQ2WjEuanBnIiwiZ2VucmVfaWRzIjpbMTYsMzUsMTIsMTA3NTFdLCJpZCI6NDU5MTUxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQm9zcyBCYWJ5OiBGYW1pbHkgQnVzaW5lc3MiLCJvdmVydmlldyI6IlRoZSBUZW1wbGV0b24gYnJvdGhlcnMg4oCUIFRpbSBhbmQgaGlzIEJvc3MgQmFieSBsaXR0bGUgYnJvIFRlZCDigJQgaGF2ZSBiZWNvbWUgYWR1bHRzIGFuZCBkcmlmdGVkIGF3YXkgZnJvbSBlYWNoIG90aGVyLiBCdXQgYSBuZXcgYm9zcyBiYWJ5IHdpdGggYSBjdXR0aW5nLWVkZ2UgYXBwcm9hY2ggYW5kIGEgY2FuLWRvIGF0dGl0dWRlIGlzIGFib3V0IHRvIGJyaW5nIHRoZW0gdG9nZXRoZXIgYWdhaW4g4oCmIGFuZCBpbnNwaXJlIGEgbmV3IGZhbWlseSBidXNpbmVzcy4iLCJwb3B1bGFyaXR5Ijo0NzQwLjIzOSwicG9zdGVyX3BhdGgiOiIvNWRFeE81RzJpYWFUeFluTElGS0xXb2ZEenlJLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDctMDEiLCJ0aXRsZSI6IlRoZSBCb3NzIEJhYnk6IEZhbWlseSBCdXNpbmVzcyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LCJ2b3RlX2NvdW50Ijo1MzJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzYyMGhuTVZMdTZSU1pXNmE1cndPOGdxcHQwdC5qcGciLCJnZW5yZV9pZHMiOlsxNiwzNSwxMDc1MSwxNF0sImlkIjo1MDg5NDMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikx1Y2EiLCJvdmVydmlldyI6Ikx1Y2EgYW5kIGhpcyBiZXN0IGZyaWVuZCBBbGJlcnRvIGV4cGVyaWVuY2UgYW4gdW5mb3JnZXR0YWJsZSBzdW1tZXIgb24gdGhlIEl0YWxpYW4gUml2aWVyYS4gQnV0IGFsbCB0aGUgZnVuIGlzIHRocmVhdGVuZWQgYnkgYSBkZWVwbHktaGVsZCBzZWNyZXQ6IHRoZXkgYXJlIHNlYSBtb25zdGVycyBmcm9tIGFub3RoZXIgd29ybGQganVzdCBiZWxvdyB0aGUgd2F0ZXLigJlzIHN1cmZhY2UuIiwicG9wdWxhcml0eSI6Mzg1OC4wMDcsInBvc3Rlcl9wYXRoIjoiL2pUc3dwNkt5RFlLdHZDNTJHYkhhZ3JaYkd2RC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA2LTE3IiwidGl0bGUiOiJMdWNhIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMSwidm90ZV9jb3VudCI6MjYzN30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNUhqellUaWhrSDdFdk9XU0U3S2NzRjZwQk1NLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDM1LDEyLDE2LDE0XSwiaWQiOjUyMjQ3OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUGV0ZXIgUmFiYml0IDI6IFRoZSBSdW5hd2F5Iiwib3ZlcnZpZXciOiJCZWEsIFRob21hcywgYW5kIHRoZSByYWJiaXRzIGhhdmUgY3JlYXRlZCBhIG1ha2VzaGlmdCBmYW1pbHksIGJ1dCBkZXNwaXRlIGhpcyBiZXN0IGVmZm9ydHMsIFBldGVyIGNhbuKAmXQgc2VlbSB0byBzaGFrZSBoaXMgbWlzY2hpZXZvdXMgcmVwdXRhdGlvbi4gQWR2ZW50dXJpbmcgb3V0IG9mIHRoZSBnYXJkZW4sIFBldGVyIGZpbmRzIGhpbXNlbGYgaW4gYSB3b3JsZCB3aGVyZSBoaXMgbWlzY2hpZWYgaXMgYXBwcmVjaWF0ZWQsIGJ1dCB3aGVuIGhpcyBmYW1pbHkgcmlza3MgZXZlcnl0aGluZyB0byBjb21lIGxvb2tpbmcgZm9yIGhpbSwgUGV0ZXIgbXVzdCBmaWd1cmUgb3V0IHdoYXQga2luZCBvZiBidW5ueSBoZSB3YW50cyB0byBiZS4iLCJwb3B1bGFyaXR5IjoyNTQ0LjI1NywicG9zdGVyX3BhdGgiOiIvY3ljRHo2OER0VGpKckRKMWZWOEVCcTJYZHBiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDMtMjUiLCJ0aXRsZSI6IlBldGVyIFJhYmJpdCAyOiBUaGUgUnVuYXdheSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjQsInZvdGVfY291bnQiOjE0Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveFhIWmViMXloSnZuU0hQelpEcWVlMHpmTWI2LmpwZyIsImdlbnJlX2lkcyI6WzI4LDEyLDgwLDUzXSwiaWQiOjM4NTEyOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRjkiLCJvdmVydmlldyI6IkRvbWluaWMgVG9yZXR0byBhbmQgaGlzIGNyZXcgYmF0dGxlIHRoZSBtb3N0IHNraWxsZWQgYXNzYXNzaW4gYW5kIGhpZ2gtcGVyZm9ybWFuY2UgZHJpdmVyIHRoZXkndmUgZXZlciBlbmNvdW50ZXJlZDogaGlzIGZvcnNha2VuIGJyb3RoZXIuIiwicG9wdWxhcml0eSI6MjY2MC43ODEsInBvc3Rlcl9wYXRoIjoiL2JPRmFBWG1XV1hDM1JidjR1NHVNOVpTelJYUC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA1LTE5IiwidGl0bGUiOiJGOSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjYsInZvdGVfY291bnQiOjUyNH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNzBBVjJYeDVGUVlqMjBsYWJwMEVHZGJqSTZFLmpwZyIsImdlbnJlX2lkcyI6WzgwLDI4LDUzXSwiaWQiOjYzNzY0OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV3JhdGggb2YgTWFuIiwib3ZlcnZpZXciOiJBIGNvbGQgYW5kIG15c3RlcmlvdXMgbmV3IHNlY3VyaXR5IGd1YXJkIGZvciBhIExvcyBBbmdlbGVzIGNhc2ggdHJ1Y2sgY29tcGFueSBzdXJwcmlzZXMgaGlzIGNvLXdvcmtlcnMgd2hlbiBoZSB1bmxlYXNoZXMgcHJlY2lzaW9uIHNraWxscyBkdXJpbmcgYSBoZWlzdC4gVGhlIGNyZXcgaXMgbGVmdCB3b25kZXJpbmcgd2hvIGhlIGlzIGFuZCB3aGVyZSBoZSBjYW1lIGZyb20uIFNvb24sIHRoZSBtYXJrc21hbidzIHVsdGltYXRlIG1vdGl2ZSBiZWNvbWVzIGNsZWFyIGFzIGhlIHRha2VzIGRyYW1hdGljIGFuZCBpcnJldm9jYWJsZSBzdGVwcyB0byBzZXR0bGUgYSBzY29yZS4iLCJwb3B1bGFyaXR5IjoxODU1Ljg2OSwicG9zdGVyX3BhdGgiOiIvTTdTVUs4NXNLamFTdGc0VEtobEFWeUdsejMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wNC0yMiIsInRpdGxlIjoiV3JhdGggb2YgTWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuOCwidm90ZV9jb3VudCI6MTMyMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZzE1UFI4ZVFWOURlaFNXbGFndmRuSlpxb1JxLmpwZyIsImdlbnJlX2lkcyI6Wzk2NDgsNTMsMjddLCJpZCI6NjAyNzM0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGlyYWw6IEZyb20gdGhlIEJvb2sgb2YgU2F3Iiwib3ZlcnZpZXciOiJXb3JraW5nIGluIHRoZSBzaGFkb3cgb2YgYW4gZXN0ZWVtZWQgcG9saWNlIHZldGVyYW4sIGJyYXNoIERldGVjdGl2ZSBFemVraWVsIOKAnFpla2XigJ0gQmFua3MgYW5kIGhpcyByb29raWUgcGFydG5lciB0YWtlIGNoYXJnZSBvZiBhIGdyaXNseSBpbnZlc3RpZ2F0aW9uIGludG8gbXVyZGVycyB0aGF0IGFyZSBlZXJpbHkgcmVtaW5pc2NlbnQgb2YgdGhlIGNpdHnigJlzIGdydWVzb21lIHBhc3QuICBVbndpdHRpbmdseSBlbnRyYXBwZWQgaW4gYSBkZWVwZW5pbmcgbXlzdGVyeSwgWmVrZSBmaW5kcyBoaW1zZWxmIGF0IHRoZSBjZW50ZXIgb2YgdGhlIGtpbGxlcuKAmXMgbW9yYmlkIGdhbWUuIiwicG9wdWxhcml0eSI6ODk4LjQ0OSwicG9zdGVyX3BhdGgiOiIvbGN5S3ZlN25YUkZnUnltczlNMWJuZE5rS094LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDUtMTIiLCJ0aXRsZSI6IlNwaXJhbDogRnJvbSB0aGUgQm9vayBvZiBTYXciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni40LCJ2b3RlX2NvdW50Ijo1NDN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2Rra0R1VG94VFJNaDVsbUpYZlVMRU9RSzFaTS5qcGciLCJnZW5yZV9pZHMiOlsxNiwzNSwxMDc1MSw4NzhdLCJpZCI6Mzc5Njg2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGFjZSBKYW06IEEgTmV3IExlZ2FjeSIsIm92ZXJ2aWV3IjoiV2hlbiBMZUJyb24gYW5kIGhpcyB5b3VuZyBzb24gRG9tIGFyZSB0cmFwcGVkIGluIGEgZGlnaXRhbCBzcGFjZSBieSBhIHJvZ3VlIEEuSS4sIExlQnJvbiBtdXN0IGdldCB0aGVtIGhvbWUgc2FmZSBieSBsZWFkaW5nIEJ1Z3MsIExvbGEgQnVubnkgYW5kIHRoZSB3aG9sZSBnYW5nIG9mIG5vdG9yaW91c2x5IHVuZGlzY2lwbGluZWQgTG9vbmV5IFR1bmVzIHRvIHZpY3Rvcnkgb3ZlciB0aGUgQS5JLidzIGRpZ2l0aXplZCBjaGFtcGlvbnMgb24gdGhlIGNvdXJ0LiBJdCdzIFR1bmVzIHZlcnN1cyBHb29ucyBpbiB0aGUgaGlnaGVzdC1zdGFrZXMgY2hhbGxlbmdlIG9mIGhpcyBsaWZlLiIsInBvcHVsYXJpdHkiOjk0NC4xNjYsInBvc3Rlcl9wYXRoIjoiLzViRks1ZDNtVlRBdkJDWGk1TlBXSDB0WWpLbC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA3LTA4IiwidGl0bGUiOiJTcGFjZSBKYW06IEEgTmV3IExlZ2FjeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjksInZvdGVfY291bnQiOjd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3ZxRWpYeldkelBiVjJEWjdiazI5d2VERmlEbC5qcGciLCJnZW5yZV9pZHMiOlsxNiwxMiwxMDc1MSwzN10sImlkIjo2Mzc2OTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlNwaXJpdCBVbnRhbWVkIiwib3ZlcnZpZXciOiJMdWNreSBQcmVzY290dCdzIGxpZmUgaXMgY2hhbmdlZCBmb3JldmVyIHdoZW4gc2hlIG1vdmVzIGZyb20gaGVyIGhvbWUgaW4gdGhlIGNpdHkgdG8gYSBzbWFsbCBmcm9udGllciB0b3duIGFuZCBiZWZyaWVuZHMgYSB3aWxkIG11c3RhbmcgbmFtZWQgU3Bpcml0LiIsInBvcHVsYXJpdHkiOjkzMi4zOTIsInBvc3Rlcl9wYXRoIjoiLzVjYkdWRG1STVlWemtxNWNJdFo3Y1lsRGREUi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA1LTIwIiwidGl0bGUiOiJTcGlyaXQgVW50YW1lZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjcsInZvdGVfY291bnQiOjE0M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdGVocEtNc2xzNjIxR1Q5V1VRaWUyRnQ2TG1QLmpwZyIsImdlbnJlX2lkcyI6WzI3LDI4LDUzXSwiaWQiOjYwMjIyMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEZvcmV2ZXIgUHVyZ2UiLCJvdmVydmlldyI6IkFsbCB0aGUgcnVsZXMgYXJlIGJyb2tlbiBhcyBhIHNlY3Qgb2YgbGF3bGVzcyBtYXJhdWRlcnMgZGVjaWRlcyB0aGF0IHRoZSBhbm51YWwgUHVyZ2UgZG9lcyBub3Qgc3RvcCBhdCBkYXlicmVhayBhbmQgaW5zdGVhZCBzaG91bGQgbmV2ZXIgZW5kLiIsInBvcHVsYXJpdHkiOjkwMi40NiwicG9zdGVyX3BhdGgiOiIvdUhBNUNPZ0R6Y3hqcFlTSEh1bHJLVmw2QnlMLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDYtMzAiLCJ0aXRsZSI6IlRoZSBGb3JldmVyIFB1cmdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwidm90ZV9jb3VudCI6NDl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3JvQUxQNk44UTJoNTdtQnhlY1FKYXpzMElGei5qcGciLCJnZW5yZV9pZHMiOlsyN10sImlkIjo2NzY4NDUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZXMiLCJvcmlnaW5hbF90aXRsZSI6Ikp1ZWdhIENvbm1pZ28iLCJvdmVydmlldyI6IlNvZmlhLCBhbiBpbnNlY3VyZSB5b3VuZyB3b21hbiwgYmVnaW5zIGJhYnlzaXR0aW5nIHR3byB0cm91Ymxlc29tZSBzaWJsaW5ncyB0aGF0IHR1cm4gaGVyIGpvYiBpbnRvIGEgY29tcGxldGUgbGl2aW5nIGhlbGwuIFRoYXQgaXMgdW50aWwgYSBkZXZpbGlzaCBwcmVzZW5jZSBzdGFydHMgbWVzc2luZyB3aXRoIHRoZSB0cmlvIGFuZCB0aGV5IG11c3QgYmFuZCB0b2dldGhlciB0byBmaWdodCB0aGUgZGVtb24gYXdheS4iLCJwb3B1bGFyaXR5Ijo2MDguMzYsInBvc3Rlcl9wYXRoIjoiL2lNNWtOdlp6Y01TbVd2N0NGVHhuVHU1emZvYS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTAyLTI1IiwidGl0bGUiOiJDb21lIFBsYXkgV2l0aCBNZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LCJ2b3RlX2NvdW50IjoxMDR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hKdUR2d3pTMFNQbHNFNk1ORk9wem5RbHREWi5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNCwxNiwyOCwxMl0sImlkIjo1Mjc3NzQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJheWEgYW5kIHRoZSBMYXN0IERyYWdvbiIsIm92ZXJ2aWV3IjoiTG9uZyBhZ28sIGluIHRoZSBmYW50YXN5IHdvcmxkIG9mIEt1bWFuZHJhLCBodW1hbnMgYW5kIGRyYWdvbnMgbGl2ZWQgdG9nZXRoZXIgaW4gaGFybW9ueS4gQnV0IHdoZW4gYW4gZXZpbCBmb3JjZSB0aHJlYXRlbmVkIHRoZSBsYW5kLCB0aGUgZHJhZ29ucyBzYWNyaWZpY2VkIHRoZW1zZWx2ZXMgdG8gc2F2ZSBodW1hbml0eS4gTm93LCA1MDAgeWVhcnMgbGF0ZXIsIHRoYXQgc2FtZSBldmlsIGhhcyByZXR1cm5lZCBhbmQgaXTigJlzIHVwIHRvIGEgbG9uZSB3YXJyaW9yLCBSYXlhLCB0byB0cmFjayBkb3duIHRoZSBsZWdlbmRhcnkgbGFzdCBkcmFnb24gdG8gcmVzdG9yZSB0aGUgZnJhY3R1cmVkIGxhbmQgYW5kIGl0cyBkaXZpZGVkIHBlb3BsZS4iLCJwb3B1bGFyaXR5Ijo2MzcuNDA5LCJwb3N0ZXJfcGF0aCI6Ii9sUHNEMTBQUDRyZ1VHaUdSNENDWEE2aVkwUVEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wMy0wMyIsInRpdGxlIjoiUmF5YSBhbmQgdGhlIExhc3QgRHJhZ29uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMSwidm90ZV9jb3VudCI6Mzc2NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcmVEZW9Pdm5paDdadjJ4S1haQVpMN3c4S1A2LmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE0LDE2LDM1XSwiaWQiOjUyOTIwMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIENyb29kczogQSBOZXcgQWdlIiwib3ZlcnZpZXciOiJTZWFyY2hpbmcgZm9yIGEgc2FmZXIgaGFiaXRhdCwgdGhlIHByZWhpc3RvcmljIENyb29kIGZhbWlseSBkaXNjb3ZlcnMgYW4gaWR5bGxpYywgd2FsbGVkLWluIHBhcmFkaXNlIHRoYXQgbWVldHMgYWxsIG9mIGl0cyBuZWVkcy4gVW5mb3J0dW5hdGVseSwgdGhleSBtdXN0IGFsc28gbGVhcm4gdG8gbGl2ZSB3aXRoIHRoZSBCZXR0ZXJtYW5zIC0tIGEgZmFtaWx5IHRoYXQncyBhIGNvdXBsZSBvZiBzdGVwcyBhYm92ZSB0aGUgQ3Jvb2RzIG9uIHRoZSBldm9sdXRpb25hcnkgbGFkZGVyLiBBcyB0ZW5zaW9ucyBiZXR3ZWVuIHRoZSBuZXcgbmVpZ2hib3JzIHN0YXJ0IHRvIHJpc2UsIGEgbmV3IHRocmVhdCBzb29uIHByb3BlbHMgYm90aCBjbGFucyBvbiBhbiBlcGljIGFkdmVudHVyZSB0aGF0IGZvcmNlcyB0aGVtIHRvIGVtYnJhY2UgdGhlaXIgZGlmZmVyZW5jZXMsIGRyYXcgc3RyZW5ndGggZnJvbSBvbmUgYW5vdGhlciwgYW5kIHN1cnZpdmUgdG9nZXRoZXIuIiwicG9wdWxhcml0eSI6NTY3LjE4NiwicG9zdGVyX3BhdGgiOiIvdGJWWjNTcTg4ZFphQ0FObFVjZXdRdUhRT2FFLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMTEtMjUiLCJ0aXRsZSI6IlRoZSBDcm9vZHM6IEEgTmV3IEFnZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjYsInZvdGVfY291bnQiOjIyNzR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL292Z2dtQU91MUliUEdUUUU4bGc0bEJhc05DNy5qcGciLCJnZW5yZV9pZHMiOls4NzgsMjgsMTIsNTNdLCJpZCI6NDEyNjU2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDaGFvcyBXYWxraW5nIiwib3ZlcnZpZXciOiJUd28gdW5saWtlbHkgY29tcGFuaW9ucyBlbWJhcmsgb24gYSBwZXJpbG91cyBhZHZlbnR1cmUgdGhyb3VnaCB0aGUgYmFkbGFuZHMgb2YgYW4gdW5leHBsb3JlZCBwbGFuZXQgYXMgdGhleSB0cnkgdG8gZXNjYXBlIGEgZGFuZ2Vyb3VzIGFuZCBkaXNvcmllbnRpbmcgcmVhbGl0eSwgd2hlcmUgYWxsIGlubmVyIHRob3VnaHRzIGFyZSBzZWVuIGFuZCBoZWFyZCBieSBldmVyeW9uZS4iLCJwb3B1bGFyaXR5IjozNTEuMjAxLCJwb3N0ZXJfcGF0aCI6Ii85a2c3M01nOFdKS2xCOVkyU0FKemVES0FudUIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wMi0yNCIsInRpdGxlIjoiQ2hhb3MgV2Fsa2luZyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LCJ2b3RlX2NvdW50Ijo5MTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzdIdHZtc0xyRGVpQWdER2ExVzNtNnNlbnBmRS5qcGciLCJnZW5yZV9pZHMiOlsxMiwxNiwxMDc1MV0sImlkIjo2ODEyNjAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ik1heWEgdGhlIEJlZTogVGhlIEdvbGRlbiBPcmIiLCJvdmVydmlldyI6IldoZW4gTWF5YSwgYSBoZWFkc3Ryb25nIGxpdHRsZSBiZWUsIGFuZCBoZXIgYmVzdCBmcmllbmQgV2lsbGksIHJlc2N1ZSBhbiBhbnQgcHJpbmNlc3MgdGhleSBmaW5kIHRoZW1zZWx2ZXMgaW4gdGhlIG1pZGRsZSBvZiBhbiBlcGljIGJ1ZyBiYXR0bGUgdGhhdCB3aWxsIHRha2UgdGhlbSB0byBzdHJhbmdlIG5ldyB3b3JsZHMgYW5kIHRlc3QgdGhlaXIgZnJpZW5kc2hpcCB0byBpdHMgbGltaXRzLiIsInBvcHVsYXJpdHkiOjIzNC4wNTIsInBvc3Rlcl9wYXRoIjoiL3RNUzJxY2JoYmtGcGN3TG5iVUU5bzlJSzRISC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTAxLTA3IiwidGl0bGUiOiJNYXlhIHRoZSBCZWU6IFRoZSBHb2xkZW4gT3JiIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNCwidm90ZV9jb3VudCI6NDZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3d1MXVpbG1oTTRUZGx1S2kyeXRmejhnaWRIZi5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNiwxNCwxMiwzNV0sImlkIjo0MDAxNjAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBTcG9uZ2VCb2IgTW92aWU6IFNwb25nZSBvbiB0aGUgUnVuIiwib3ZlcnZpZXciOiJXaGVuIGhpcyBiZXN0IGZyaWVuZCBHYXJ5IGlzIHN1ZGRlbmx5IHNuYXRjaGVkIGF3YXksIFNwb25nZUJvYiB0YWtlcyBQYXRyaWNrIG9uIGEgbWFkY2FwIG1pc3Npb24gZmFyIGJleW9uZCBCaWtpbmkgQm90dG9tIHRvIHNhdmUgdGhlaXIgcGluay1zaGVsbGVkIHBhbC4iLCJwb3B1bGFyaXR5IjoyNDkuODA2LCJwb3N0ZXJfcGF0aCI6Ii9qbEo4bkRoTWhDWUp1ek93M2Y1MkNQMVc4TVcuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wOC0xNCIsInRpdGxlIjoiVGhlIFNwb25nZUJvYiBNb3ZpZTogU3BvbmdlIG9uIHRoZSBSdW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny43LCJ2b3RlX2NvdW50IjoyMjIzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii82WFZxVkFNT3NLTDVDMjZwSGVzaUFhd3VHWVcuanBnIiwiZ2VucmVfaWRzIjpbMjcsNTNdLCJpZCI6NjMwNTg2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXcm9uZyBUdXJuIiwib3ZlcnZpZXciOiJKZW4gYW5kIGEgZ3JvdXAgb2YgZnJpZW5kcyBzZXQgb3V0IHRvIGhpa2UgdGhlIEFwcGFsYWNoaWFuIFRyYWlsLiBEZXNwaXRlIHdhcm5pbmdzIHRvIHN0aWNrIHRvIHRoZSB0cmFpbCwgdGhlIGhpa2VycyBzdHJheSBvZmYgY291cnNl4oCUYW5kIGNyb3NzIGludG8gbGFuZCBpbmhhYml0ZWQgYnkgVGhlIEZvdW5kYXRpb24sIGEgaGlkZGVuIGNvbW11bml0eSBvZiBtb3VudGFpbiBkd2VsbGVycyB3aG8gdXNlIGRlYWRseSBtZWFucyB0byBwcm90ZWN0IHRoZWlyIHdheSBvZiBsaWZlLiIsInBvcHVsYXJpdHkiOjIxNC43MTUsInBvc3Rlcl9wYXRoIjoiLzRVMVNCSG13SGtOQTBlSFoybjFDdWlDMUsxZy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTAxLTI2IiwidGl0bGUiOiJXcm9uZyBUdXJuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMSwidm90ZV9jb3VudCI6NDYyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9iaklQeml4dVduT3p4REcyNVdhWEt1eTlsWVouanBnIiwiZ2VucmVfaWRzIjpbMjgsMzUsNTNdLCJpZCI6NTIyOTMxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIaXRtYW4ncyBXaWZlJ3MgQm9keWd1YXJkIiwib3ZlcnZpZXciOiJUaGUgd29ybGTigJlzIG1vc3QgbGV0aGFsIG9kZCBjb3VwbGUg4oCTIGJvZHlndWFyZCBNaWNoYWVsIEJyeWNlIGFuZCBoaXRtYW4gRGFyaXVzIEtpbmNhaWQg4oCTIGFyZSBiYWNrIG9uIGFub3RoZXIgbGlmZS10aHJlYXRlbmluZyBtaXNzaW9uLiBTdGlsbCB1bmxpY2Vuc2VkIGFuZCB1bmRlciBzY3J1dGlueSwgQnJ5Y2UgaXMgZm9yY2VkIGludG8gYWN0aW9uIGJ5IERhcml1cydzIGV2ZW4gbW9yZSB2b2xhdGlsZSB3aWZlLCB0aGUgaW5mYW1vdXMgaW50ZXJuYXRpb25hbCBjb24gYXJ0aXN0IFNvbmlhIEtpbmNhaWQuIEFzIEJyeWNlIGlzIGRyaXZlbiBvdmVyIHRoZSBlZGdlIGJ5IGhpcyB0d28gbW9zdCBkYW5nZXJvdXMgcHJvdGVjdGVlcywgdGhlIHRyaW8gZ2V0IGluIG92ZXIgdGhlaXIgaGVhZHMgaW4gYSBnbG9iYWwgcGxvdCBhbmQgc29vbiBmaW5kIHRoYXQgdGhleSBhcmUgYWxsIHRoYXQgc3RhbmQgYmV0d2VlbiBFdXJvcGUgYW5kIGEgdmVuZ2VmdWwgYW5kIHBvd2VyZnVsIG1hZG1hbi4iLCJwb3B1bGFyaXR5IjoyMzkuMDYyLCJwb3N0ZXJfcGF0aCI6Ii82endHV0RwWThadTBMNlc0U1lXRVJCUjhNc3cuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wNi0xNCIsInRpdGxlIjoiSGl0bWFuJ3MgV2lmZSdzIEJvZHlndWFyZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjE3M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvam5xNGZWNTNQeDlIdlVaRDJiUUl4dEdTd1M3LmpwZyIsImdlbnJlX2lkcyI6WzgwLDE4LDI4XSwiaWQiOjY0NDA4Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVHdpc3QiLCJvdmVydmlldyI6IkEgRGlja2VucyBjbGFzc2ljIGJyb3VnaHQgdGhyaWxsaW5nbHkgdXAgdG8gZGF0ZSBpbiB0aGUgdGVlbWluZyBoZWFydGxhbmQgb2YgbW9kZXJuIExvbmRvbiwgd2hlcmUgYSBncm91cCBvZiBzdHJlZXQgc21hcnQgeW91bmcgaHVzdGxlcnMgcGxhbiB0aGUgaGVpc3Qgb2YgdGhlIGNlbnR1cnkgZm9yIHRoZSB1bHRpbWF0ZSBwYXlkYXkuIiwicG9wdWxhcml0eSI6MjEzLjkxNywicG9zdGVyX3BhdGgiOiIvN3NYdGhXNDZSd21QQmRhY0dIbmhPekx2NDBkLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDEtMjIiLCJ0aXRsZSI6IlR3aXN0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMywidm90ZV9jb3VudCI6OTN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzhNNDZabkNKTkpkenExaWhObHNBbE94dW5rcS5qcGciLCJnZW5yZV9pZHMiOlsxMiwxNCwxMDc1MSwzNV0sImlkIjo0NTEwNDgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikp1bmdsZSBDcnVpc2UiLCJvdmVydmlldyI6IkRyLiBMaWx5IEhvdWdodG9uIGVubGlzdHMgdGhlIGFpZCBvZiB3aXNlY3JhY2tpbmcgc2tpcHBlciBGcmFuayBXb2xmZiB0byB0YWtlIGhlciBkb3duIHRoZSBBbWF6b24gaW4gaGlzIGRpbGFwaWRhdGVkIGJvYXQuIFRvZ2V0aGVyLCB0aGV5IHNlYXJjaCBmb3IgYW4gYW5jaWVudCB0cmVlIHRoYXQgaG9sZHMgdGhlIHBvd2VyIHRvIGhlYWwgLS0gYSBkaXNjb3ZlcnkgdGhhdCB3aWxsIGNoYW5nZSB0aGUgZnV0dXJlIG9mIG1lZGljaW5lLiIsInBvcHVsYXJpdHkiOjE0OC44ODMsInBvc3Rlcl9wYXRoIjoiL2JFRkZqMEtLdE9JWWJ5ZGhjeEpTRHEwaHpnNy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA3LTI4IiwidGl0bGUiOiJKdW5nbGUgQ3J1aXNlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9XSwidG90YWxfcGFnZXMiOjE5LCJ0b3RhbF9yZXN1bHRzIjozNjZ9
  recorded_at: Wed, 14 Jul 2021 14:58:42 GMT
recorded_with: VCR 6.0.0
