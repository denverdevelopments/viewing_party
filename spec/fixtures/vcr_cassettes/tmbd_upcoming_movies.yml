---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=471fbec1249579ef3875b9b4cbaaea28
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.5.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Jul 2021 16:07:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 61e75bd33e6585cb966e70a5677b630b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - BOS50-C1
      X-Amz-Cf-Id:
      - dXcq5jhIwYdYtX8byenzfB9yxf5Ckc5DbhNAy0_9-crJA6gPd1Ybqw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 10 Jul 2021 16:07:42 GMT
recorded_with: VCR 6.0.0
